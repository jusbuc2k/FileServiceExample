using FileServiceAPI.Application.Domain;
using FileServiceAPI.Application.Services;
using FileServiceAPI.Controllers;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Infrastructure;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices;
using System.Threading.Tasks;

namespace FileService.UnitTests
{
    [TestClass]
    public class FilesControllerTests
    {
        private const string TestImage = "";
        
        [TestMethod]
        public async Task FilesController_GetBadId_ReturnsNotFound()
        {
            var store = new InMemoryFileService();
            var controller = new FilesController(store, store);

            var getResult = await controller.Get(Guid.Parse("5f28fa1c-64c9-11eb-ae93-0242ac130002"));

            Assert.AreEqual(404, (getResult.Result as StatusCodeResult).StatusCode);
        }

        [TestMethod]
        public async Task FilesController_GetWithoutMatch_ReturnsEmptyList()
        {
            var store = new InMemoryFileService();
            var controller = new FilesController(store, store);

            var getResult = await controller.Get(0, 25, name: "FooBar");

            Assert.AreEqual(0, getResult.Count());
        }

        [TestMethod]
        public async Task FilesController_LimitOffset()
        {
            var store = new InMemoryFileService();
            var controller = new FilesController(store, store);

            for (int i = 1; i <= 100; i++)
            {
                await controller.Post(new FileServiceAPI.Application.Domain.FileCreationProperties()
                {
                    Name = $"{i:000}.png"
                });
            }

            var getResult = await controller.Get(0, 25);

            Assert.AreEqual(25, getResult.Count());

            // Note this is a little hacky, because we can only expect this since the in-memory store orders by name on the list call
            Assert.AreEqual("001.png", getResult.First().Properties.Name);
            Assert.AreEqual("025.png", getResult.Last().Properties.Name);

            getResult = await controller.Get(25, 25);

            Assert.AreEqual(25, getResult.Count());
            Assert.AreEqual("026.png", getResult.First().Properties.Name);
            Assert.AreEqual("050.png", getResult.Last().Properties.Name);
        }

        [TestMethod]
        public async Task FilesController_PostCreatesFileRecord()
        {
            var store = new InMemoryFileService();
            var controller = new FilesController(store, store);

            var result = await controller.Post(new FileServiceAPI.Application.Domain.FileCreationProperties()
            {
                Name = "image.png"
            });

            Assert.IsInstanceOfType(result.Value, typeof(Record<FileProperties>));
            var createdRecord = result.Value as Record<FileProperties>;
            Assert.AreEqual("image.png", createdRecord.Properties.Name);
            Assert.AreEqual(0, createdRecord.Properties.ContentLength);
            Assert.IsTrue(createdRecord.ID != Guid.Empty);
            Assert.IsTrue(createdRecord.Created > DateTimeOffset.MinValue);
            Assert.IsTrue(createdRecord.Modified > DateTimeOffset.MinValue);

            var storeRecord = await store.GetFileAsync(createdRecord.ID);
            Assert.AreEqual(createdRecord.ID, storeRecord.ID);
            Assert.AreEqual(createdRecord.Created, storeRecord.Created);
            Assert.AreEqual(createdRecord.Modified, storeRecord.Modified);
            Assert.AreEqual(createdRecord.Properties.Name, storeRecord.Properties.Name);
        }

        [TestMethod]
        public async Task FilesController_PostContent_SetsCorrectLength()
        {
            var store = new InMemoryFileService();
            var controller = new FilesController(store, store);

            var result = await controller.Post(new FileServiceAPI.Application.Domain.FileCreationProperties()
            {
                Name = "image.png"
            });
            var createdRecord = result.Value as Record<FileProperties>;

            using var buffer = new MemoryStream(Convert.FromBase64String(TestImage));
            var file = new FormFile(buffer, 0, buffer.Length, "image.png", "image.png");
            
            var contentResult = await controller.PostContent(createdRecord.ID, file);

            var storeRecord = await store.GetFileAsync(createdRecord.ID);

            Assert.AreEqual(34357L, storeRecord.Properties.ContentLength);
        }

        [TestMethod]
        public async Task FilesController_Delete_RemovesMetadataAndContent()
        {
            var store = new InMemoryFileService();
            var controller = new FilesController(store, store);

            var result = await controller.Post(new FileServiceAPI.Application.Domain.FileCreationProperties()
            {
                Name = "image.png"
            });
            var createdRecord = result.Value as Record<FileProperties>;
            using var buffer = new MemoryStream(Convert.FromBase64String(TestImage));
            var file = new FormFile(buffer, 0, buffer.Length, "image.png", "image.png");
            var contentResult = await controller.PostContent(createdRecord.ID, file);

            var meta = await store.GetFileAsync(createdRecord.ID);
            var stream = await store.DownloadFileAsync(createdRecord.ID);

            Assert.IsNotNull(meta);
            Assert.IsNotNull(stream);

            await controller.Delete(createdRecord.ID);

            meta = await store.GetFileAsync(createdRecord.ID);
            stream = await store.DownloadFileAsync(createdRecord.ID);

            Assert.IsNull(meta);
            Assert.IsNull(stream);
        }

        [TestMethod]
        public async Task FilesController_GetContent_GetsAllBytes()
        {
            var store = new InMemoryFileService();
            var controller = new FilesController(store, store);

            var result = await controller.Post(new FileServiceAPI.Application.Domain.FileCreationProperties()
            {
                Name = "image.png"
            });
            var createdRecord = result.Value as Record<FileProperties>;

            using var buffer = new MemoryStream(Convert.FromBase64String(TestImage));
            var file = new FormFile(buffer, 0, buffer.Length, "image.png", "image.png");

            var uploadResult = await controller.PostContent(createdRecord.ID, file);

            var downloadResult = await controller.GetContent(createdRecord.ID);

            var fileResult = downloadResult as FileStreamResult;

            Assert.AreEqual("application/octet-stream", fileResult.ContentType);
            Assert.AreEqual("image.png", fileResult.FileDownloadName);
            Assert.AreEqual(34357L, fileResult.FileStream.Length);
        }
    }
}
